// deno-lint-ignore-file ban-types
import { RawUser } from '../interfaces/RawUser.ts'

export interface GatewayMessage {
  id: string //	snowflake	id of the message
  channel_id: string //	snowflake	id of the channel the message was sent in
  guild_id?: string //	snowflake	id of the guild the message was sent in
  author: RawUser //**	user object	the author of this message (not guaranteed to be a valid user, see below)
  member?: {} //***	partial guild member object	member properties for this message's author
  content: string //	string	contents of the message
  timestamp: Date //	ISO8601 timestamp	when this message was sent
  edited_timestamp: Date | null //ISO8601 timestamp	when this message was edited (or null if never)
  tts: boolean //whether this was a TTS message
  mention_everyone: boolean //whether this message mentions everyone
  mentions: RawUser[] //****	array of user objects, with an additional partial member field	users specifically mentioned in the message
  mention_roles: string[] //array of role object ids	roles specifically mentioned in this message
  mention_channels?: {}[] //*****	array of channel mention objects	channels specifically mentioned in this message
  attachments: {}[] //	array of attachment objects	any attached files
  embeds: {}[] //array of embed objects	any embedded content
  reactions?: {}[] //array of reaction objects	reactions to the message
  nonce?: number | string //	integer or string	used for validating a message was sent
  pinned: boolean //	whether this message is pinned
  webhook_id?: string //	snowflake	if the message is generated by a webhook, this is the webhook's id
  type: number //	integer	type of message
  activity?: unknown //	message activity object	sent with Rich Presence-related chat embeds
  application?: {} //	partial application object	sent with Rich Presence-related chat embeds
  application_id?: string //	snowflake	if the message is an Interaction or application-owned webhook, this is the id of the application
  message_reference?: GatewayMessage //	message reference object	data showing the source of a crosspost, channel follow add, pin, or reply message
  flags?: number //	integer	message flags combined as a bitfield
  referenced_message?: GatewayMessage | null //******	?message object	the message associated with the message_reference
  interaction?: {} //	message interaction object	sent if the message is a response to an Interaction
  thread?: {} //	channel object	the thread that was started from this message, includes thread member object
  components?: {}[] //	array of message components	sent if the message contains components like buttons, action rows, or other interactive components
  sticker_items?: string[] //	array of message sticker item objects	sent if the message contains stickers
  stickers?: {}[] //	array of sticker objects
}
